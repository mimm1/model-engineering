-- @path smvcml=/me_task2.2/metamodels/smvcml.ecore
-- @path swml=/me_task2.2/metamodels/swml.ecore

module transformation;
create OUT : smvcml from IN : swml;


-- CONTENTMODEL

-- Fehlend: Entity Professor und Assisten erben die Attribute von Professor (superEntity!)
--			Typ der Attributen stimmen nicht! Enumeration "AttributeType" muss noch rein!
--			MultiValued und ComplexType fehlen noch
--			Bei den DAOS: For Entity und ShowDirectInstancesOnly stimmen glaub ich nicht bzw.
--			sind sie in der Musterlösung anders!


rule WebApplication2SMVCApplication{
	from
		w: swml!WebApplication,
		c: swml!ContentModel
		
	to
		out: smvcml!SMVCApplication(
			name <- w.name,	
			entities <- c.entityType,
			daos <- c.entityType
		)
	
}




rule EntityType2Entity{
	from
		e: swml!EntityType
		
		
	to
		out: smvcml!Entity(
		
			name <- e.name,
			attributes <- e.attribute,
			attributes <- e.id,
			attributes <- e.relationship
			
			
		),
		

		o: smvcml!DataAccessObject (
			
			name <- e.name+'DAO',
			forEntity <- e,
			showDirectInstancesOnly <- not e.isAbstract
		)
	--do{	
--			if(e.superEntityType) {
				
--			}
			
		
			--if e.superEntityType
			--then 
			--	attributes <- e.superEntityType.attribute
			--else
			--	'this case should never occure'
			--endif
			--then attributes <- e.superEntityType.attribute,				
			--endif
				
			
--}		
	

}



rule Attribute2Attribute{
	from
		a: swml!Attribute

	to
		out: smvcml!Attribute(

			name <- a.name,
			type <- if a.type.toString() = 'String' or a.type.toString() = 'Date' or a.type.toString() = 'Time' or a.type.toString() = 'Email' then #VARCHAR 
			else if a.type.toString() = 'Float' then #DOUBLE else #BIGINTEGER endif endif,
			multiValued <-	false 
			--type <- a
	)
}

rule Attribute2Relationship{
	from
		
		r: swml!Relationship
	to
		out: smvcml!Attribute(
			
			
			name <- r.name,
			multiValued <- if r.upper <= -1 then true else false endif	
			--type <- false
	)
}
-- AB HIER HYPERTEXTMODEL

rule Controller2StaticPage{
	from
		s: swml!StaticPage

	to
		out: smvcml!Controller(
			url <- '/'+s.name	
		)
		
	
}



